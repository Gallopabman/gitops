pipeline {
    agent any
    
    environment {
    VERSION = "${BUILD_NUMBER}"

    }
    stages {
        stage('gitlab') {
          steps {
             echo 'Notify GitLab'
             updateGitlabCommitStatus name: 'build', state: 'pending'
             updateGitlabCommitStatus name: 'build', state: 'success'
            }
        }
        stage('Maven test') {
            steps {
                sh "mvn clean test --file Code/pom.xml -Dmaven.test.skip=true"
            }
        }
        stage('Maven release') {
            steps {
                sh "mvn versions:set -DnewVersion=$VERSION -f Code/pom.xml -Dmaven.test.skip=true"
                sh "mvn clean deploy --settings Code/settings.xml -f Code/pom.xml -Dmaven.test.skip=true"  
            }
        }
        stage('Maven snapshot') {
            steps {
                sh "mvn versions:set -DnewVersion=$VERSION-SNAPSHOT -f Code/pom.xml -Dmaven.test.skip=true"
                sh "mvn clean deploy --settings Code/settings.xml -f Code/pom.xml -Dmaven.test.skip=true" 
            }
        }
        stage('Docker build and publish') {
            steps { 
                withCredentials([string(credentialsId: 'quay-pass', variable: 'SECRET')]) { 
                    sh "docker login quay.io -u pablo_galleguillo -p ${SECRET}"
                    sh "docker build --build-arg VERSION=$VERSION -t quay.io/pablo_galleguillo/journals:$VERSION ."
                    sh "docker push quay.io/pablo_galleguillo/journals:$VERSION"   
                }       
            }           
        }
    }    
}
